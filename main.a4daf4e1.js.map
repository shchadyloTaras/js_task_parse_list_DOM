{"version":3,"sources":["scripts/main.js"],"names":["listEmployees","document","querySelector","employees","children","toNumber","salary","Number","replace","sortList","list","sort","a","b","dataset","forEach","node","append","getEmployees","map","elem","innerText"],"mappings":";AAAA,aAyBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvBA,IAAMA,EAAgBC,SAASC,cAAc,MACvCC,EAAgBH,EAAAA,EAAcI,UAEpC,SAASC,EAASC,GACTC,OAAAA,OAAOD,EAAOE,QAAQ,QAAS,KAGxC,SAASC,EAASC,GACT,OAAA,EAAIA,EAAKN,UACbO,KAAK,SAACC,EAAGC,GAAMR,OAAAA,EAASQ,EAAEC,QAAQR,QAAUD,EAASO,EAAEE,QAAQR,UAC/DS,QAAQ,SAAAC,GAAQN,OAAAA,EAAKO,OAAOD,KAGjC,SAASE,EAAaR,GACbA,OAAAA,EAAKS,IAAI,SAAAC,GAAI,OAAA,EAAA,CAERA,KAAAA,EAAKC,WACVD,EAAKN,WAKdL,EAAST,GACTkB,EAAaf","file":"main.a4daf4e1.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst listEmployees = document.querySelector('ul');\nconst employees = [...listEmployees.children];\n\nfunction toNumber(salary) {\n  return Number(salary.replace(/,|\\$/g, ''));\n}\n\nfunction sortList(list) {\n  return [...list.children]\n    .sort((a, b) => toNumber(b.dataset.salary) - toNumber(a.dataset.salary))\n    .forEach(node => list.append(node));\n}\n\nfunction getEmployees(list) {\n  return list.map(elem => (\n    {\n      'name': elem.innerText,\n      ...elem.dataset,\n    })\n  );\n}\n\nsortList(listEmployees);\ngetEmployees(employees);\n"]}